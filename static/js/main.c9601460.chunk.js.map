{"version":3,"sources":["components/DraggableList.js","redux/constants.js","redux/reducers.js","redux/store.js","components/Receptor.js","redux/actions.js","components/LayoutX.js","Pages/EditLayoutPage.js","Pages/MainPage.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["DraggableList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDragStart","e","v","dataTransfer","dropEffect","setData","state","items","text","_this2","react_default","a","createElement","Grid_default","container","direction","justify","alignItems","spacing","item","xs","map","i","key","draggable","Paper_default","className","Avatar_default","Face_default","color","Component","ADD_ITEM","rootReducer","action","type","tempObj","JSON","parse","stringify","payload","layoutName","containers","recId","push","data","store","createStore","layout_0","structure","layout_1","layout_2","layout_3","layout_4","layout_5","window","__REDUX_DEVTOOLS_EXTENSION__","ResponsiveReactGridLayout","WidthProvider","Responsive","Receptor","allowDrop","ev","preventDefault","onAddItem","getData","dispatch","onBreakpointChange","breakpoint","cols","console","log","setState","onLayoutChange","layout","el","data-grid","index_es","onDragOver","onDrop","assign","_","React","defaultProps","lg","md","sm","xxs","rowHeight","connect","ownProps","toString","x","y","w","h","static","uniqueIdProvider","length","colsNum","components_Receptor","getCols","EditLayoutPage","match","params","id","objectSpread","components_DraggableList","Link","to","components_LayoutX","MainPage","layouts","layoutsBuilder","Header","AppBar_default","position","Toolbar_default","Typography_default","variant","noWrap","App","CssBaseline_default","components_Header","BrowserRouter","basename","process","Switch","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9601460.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\n\r\nclass DraggableList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items: [\r\n                { text: \"No 1\" },\r\n                { text: \"No 2\" },\r\n                { text: \"No 3\" },\r\n                { text: \"No 4\" },\r\n                { text: \"No 5\" }\r\n            ],\r\n        }\r\n\r\n    }\r\n    onDragStart = (e, v) => {\r\n        e.dataTransfer.dropEffect = \"move\";\r\n        e.dataTransfer.setData(\"text/plain\", v)\r\n    }\r\n    \r\n    render() {\r\n        const { items } = this.state;\r\n        return (\r\n            <div>\r\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={24}>\r\n                    <Grid item xs={12}>\r\n                        <h2>Components:</h2>\r\n                    </Grid>\r\n                    {\r\n                        items.map((item, i) => {\r\n                            return (\r\n                                <Grid item xs={12} key={i} draggable onDragStart={(e) => this.onDragStart(e, item.text)}>\r\n                                    <Paper>\r\n                                        <div className=\"draggable-item\"><Avatar><FaceIcon color=\"primary\"/></Avatar>{item.text}</div>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DraggableList;","export const ADD_ITEM = \"ADD_ITEM\";\r\n","import { ADD_ITEM } from \"./constants\";\r\n\r\nfunction rootReducer(state, action) {\r\n\r\n    if (action.type === ADD_ITEM) {\r\n            let tempObj = JSON.parse(JSON.stringify(state));\r\n            tempObj[action.payload.layoutName].containers[action.payload.recId].push(action.payload.data);\r\n            return tempObj; \r\n    }\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {\r\n    layout_0: {\r\n        containers: [[],[],[],[],[]],\r\n        structure: [1, 1, 1, 2]\r\n    },\r\n    layout_1:{\r\n        containers: [[],[],[],[],[],[]],\r\n        structure: [1, 2, 2, 1]\r\n    },\r\n    layout_2: {\r\n        containers: [[],[],[],[],[]],\r\n        structure: [1, 1, 2, 1]\r\n    },\r\n    layout_3: {\r\n        containers: [[],[],[],[],[]],\r\n        structure: [1, 2, 1, 1]\r\n    },\r\n    layout_4: {\r\n        containers: [[],[],[],[],[]],\r\n        structure: [1, 1, 1, 2]\r\n    },\r\n    layout_5: {\r\n        containers: [[],[],[],[],[],[]],\r\n        structure: [1, 2, 2, 1]\r\n    },\r\n};\r\n\r\nconst store = createStore(rootReducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport store from \"../redux/store\";\r\nimport { addItem } from \"../redux/actions\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\n\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // saved in redux only the model data (taxt) all UI data stayed here for responsiveness\r\n    return {\r\n        layout: state[ownProps.layoutName].containers[ownProps.recId].map((item, i) => {\r\n            console.log(ownProps.cols);\r\n            return {\r\n                text: item.text,\r\n                i: i.toString(),\r\n                x: i % 4,\r\n                y: 0,\r\n                w: 1,\r\n                h: 2,\r\n                static: true,\r\n            };\r\n        })\r\n    };\r\n};\r\n\r\nclass Receptor extends React.Component {\r\n    static defaultProps = {\r\n        className: \"layout\",\r\n        onLayoutChange: function () { },\r\n        cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 4 },\r\n        rowHeight: 20\r\n    };\r\n\r\n    createElement(el) {\r\n        return (\r\n            <div className=\"element\" key={el.i} data-grid={el}>\r\n                <Avatar><FaceIcon color=\"primary\"/></Avatar>\r\n                <span>{el.text}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    allowDrop = ev => {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    onAddItem = (e) => {\r\n        const data = e.dataTransfer.getData(\"text/plain\");\r\n        store.dispatch(addItem({ layoutName: this.props.layoutName, recId: this.props.recId, data: { text: data } }));\r\n    }\r\n\r\n    // We're using the cols coming back from this to calculate where to add new items.\r\n    onBreakpointChange = (breakpoint, cols) => {\r\n        console.log(cols);\r\n        this.setState({\r\n            breakpoint: breakpoint,\r\n            cols: cols\r\n        });\r\n    }\r\n\r\n    onLayoutChange = (layout) => {\r\n        this.props.onLayoutChange(layout);\r\n        this.setState({ layout: layout });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Paper>\r\n                <div onDragOver={this.allowDrop} onDrop={this.onAddItem}>\r\n                    <ResponsiveReactGridLayout\r\n                        onLayoutChange={this.onLayoutChange}\r\n                        onBreakpointChange={this.onBreakpointChange}\r\n                        {...this.props}>\r\n\r\n                        {_.map(this.props.layout, el => this.createElement(el))}\r\n                    </ResponsiveReactGridLayout>\r\n                </div>\r\n            </Paper>\r\n\r\n        );\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Receptor);","import { ADD_ITEM } from \"./constants\";\r\n\r\nexport function addItem(payload) {\r\n    return { type: ADD_ITEM, payload }\r\n};\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Receptor from './Receptor';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // layout structure in redux for convinience (structure & containers in one place) \r\n    return {\r\n        structure: state[ownProps.layoutName] ? state[ownProps.layoutName].structure : [],\r\n    };\r\n};\r\n\r\nlet uniqueIdProvider = 0;\r\n\r\nconst getCols = (colsNum, layoutName) => {\r\n    let cols = [];\r\n    for (let i = 0; i < colsNum; i++) {\r\n        cols.push(<Grid key={uniqueIdProvider} item xs={12 / colsNum}>\r\n            <Receptor layoutName={layoutName} recId={uniqueIdProvider} />\r\n        </Grid>);\r\n        uniqueIdProvider++;\r\n    }\r\n    return cols;\r\n}\r\n\r\nconst LayoutX = (props) => {\r\n    uniqueIdProvider = 0;\r\n    return (\r\n\r\n        props.structure.length > 0 ?\r\n            <Grid item className=\"layout-container\">\r\n\r\n                {\r\n                    props.structure.map((item, i) => {\r\n                        return (\r\n                            <Grid key={i} container direction=\"row\" spacing={24}>\r\n                                {getCols(item, props.layoutName)}\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </Grid>\r\n            : <h1>Layout Not Found!!!</h1>);\r\n}\r\n\r\nexport default connect(mapStateToProps)(LayoutX);\r\n","import React, { Component } from 'react';\r\nimport DraggableList from '../components/DraggableList';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LayoutX from '../components/LayoutX';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass EditLayoutPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (!props.match.params.id) {\r\n            // option to redirect to home page on not found layout \r\n            // this.props.history.push('/');\r\n        }\r\n        else {\r\n            this.state = { ...props.match.params };\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Grid container className=\"edit-layout-container\" direction=\"row\" spacing={24}>\r\n                <Grid item md={2} sm={3} xs={4}>\r\n                    <DraggableList />\r\n                </Grid>\r\n\r\n                <Grid item md={10} sm={9} xs={8}>\r\n                    <div className=\"home-link\">\r\n                        <Link to=\"/\">Back To Home</Link>            \r\n                     </div>\r\n                    <h1>Configurations View</h1>\r\n                    <LayoutX layoutName={'layout_'+this.state.id}></LayoutX>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditLayoutPage;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link } from 'react-router-dom';\r\nimport LayoutX from '../components/LayoutX';\r\n\r\nconst layoutsAmount = 6;\r\n\r\nconst layoutsBuilder = () => {\r\n    let layouts = []\r\n    for (let i = 0; i < layoutsAmount; i++) {\r\n        layouts.push(\r\n                <Grid key={i} item lg={4} md={6} sm={12} xs={12}>\r\n                    <Link to={\"/\" + i}>\r\n                        <LayoutX id={i} layoutName={'layout_'+i}></LayoutX>\r\n                    </Link>\r\n                </Grid>)\r\n        }\r\n        return layouts;\r\n}\r\n\r\nconst MainPage = () => {\r\n\r\n    return (\r\n        <Grid className=\"layouts-header\" container spacing={24}>\r\n            <h1>Layouts:</h1>\r\n            <Grid container direction=\"row\" spacing={24}>\r\n                {layoutsBuilder()}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Header = () => {\r\n    return (\r\n    <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            React Layouts App\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n  )};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport EditLayoutPage from \"./Pages/EditLayoutPage\";\r\nimport MainPage from './Pages/MainPage';\r\nimport Header from './components/Header';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"root\">\r\n      <CssBaseline />\r\n      <Header />\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={MainPage} />\r\n          <Route path=\"/:id\" component={EditLayoutPage} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\n\r\nReactDOM.render((\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>), document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}